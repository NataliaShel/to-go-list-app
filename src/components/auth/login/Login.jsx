// src/components/auth/login/Login.jsx

import React, { useState } from 'react';
import { Link, useNavigate, Navigate } from 'react-router-dom';
import { useAuth } from '../../../contexts/authContexts/authContexts'; // üëà –ø–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è, —â–æ —à–ª—è—Ö –≤—ñ—Ä–Ω–∏–π!

const Login = () => {
    const navigate = useNavigate();
    const { userLoggedIn, doSignInWithEmailAndPassword } = useAuth(); // ‚¨ÖÔ∏è –û—Ç—Ä–∏–º—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É

    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [isSigningIn, setIsSigningIn] = useState(false);
    const [errorMessage, setErrorMessage] = useState('');

    // üîê –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É–∂–µ —É–≤—ñ–π—à–æ–≤ ‚Äî –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç–∏
    if (userLoggedIn) {
        return <Navigate to="/home" replace={true} />;
    }

    const onSubmit = async (e) => {
        e.preventDefault();
        setErrorMessage('');
        setIsSigningIn(true);

        try {
            console.log('Signing in with:', email); // üîç –î–æ–ø–æ–º—ñ–∂–Ω–∏–π –ª–æ–≥
            await doSignInWithEmailAndPassword(email, password);
            // üîÅ –ú–æ–∂–µ—à –¥–æ–¥–∞—Ç–∏: navigate('/dashboard'); —è–∫—â–æ –Ω–µ–º–∞—î PrivateRoute
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É:', error);
            switch (error.code) {
                case 'auth/user-not-found':
                case 'auth/wrong-password':
                case 'auth/invalid-credential':
                    setErrorMessage('–ù–µ–≤—ñ—Ä–Ω–∏–π email –∞–±–æ –ø–∞—Ä–æ–ª—å.');
                    break;
                case 'auth/invalid-email':
                    setErrorMessage('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç email.');
                    break;
                default:
                    setErrorMessage('–ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
            }
        } finally {
            setIsSigningIn(false);
        }
    };

    return (
        <div className="auth-container">
            <div className="auth-card">
                <h2>–í—Ö—ñ–¥</h2>
                <form onSubmit={onSubmit} className="auth-form">
                    <div className="form-group">
                        <label>–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞</label>
                        <input
                            type="email"
                            placeholder="–í–∞—à–∞ –ø–æ—à—Ç–∞"
                            value={email}
                            onChange={(e) => setEmail(e.target.value)}
                            required
                        />
                    </div>

                    <div className="form-group">
                        <label>–ü–∞—Ä–æ–ª—å</label>
                        <input
                            type="password"
                            placeholder="–í–∞—à –ø–∞—Ä–æ–ª—å"
                            value={password}
                            onChange={(e) => setPassword(e.target.value)}
                            required
                        />
                    </div>

                    {errorMessage && <p className="error-message">{errorMessage}</p>}

                    <button type="submit" disabled={isSigningIn} className="auth-btn">
                        {isSigningIn ? '–í—Ö—ñ–¥...' : '–£–≤—ñ–π—Ç–∏'}
                    </button>
                </form>

                <p className="auth-link">
                    –ù–µ –º–∞—î—Ç–µ –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É? <Link to="/register">–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è</Link>
                </p>
            </div>
        </div>
    );
};

export default Login;
